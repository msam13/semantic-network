import networkx as nx
import nltk

s='Neha is walking.'
G = nx.DiGraph()
sen=s.split(".")
pronounreplacement='NULL'
for i in sen:
    k=nltk.pos_tag(nltk.word_tokenize(i))
    l=len(k)
    index=0
    noun = []
    i=0
    
#---------------------------------------------------------------------------------------------------------------------    

    while i<l and k[i][1] != 'VBZ' and k[i][1] != 'VBN' and k[i][1] != 'VBP' and k[i][1]!= 'VBD':
        if k[i][1] != 'CC' and k[i]!=',':
            noun.append(i)
            if k[i][1]!='PRP':
                pronounreplacement=k[i][0]
            i=i+1
        else:
            i=i+1
    first=i
    for i in noun:
        print(k[i])
        
#---------------------------------------------------------------------------------------------------------------------
    vb=""
    i=first
    while i<l and k[i][1]!='NNS' and k[i][1]!='NN' and k[i][1]!='NNP' and k[i][1]!='NNPS' and k[i][1]!='JJ' and k[i][1]!='JJR' and k[i][1]!='JJS':
        if vb == '':
            vb=k[i][0]
        else:
            vb=vb+"_"+k[i][0]
        i=i+1
    print(vb)
    second=i-1
    print(second)
    
#---------------------------------------------------------------------------------------------------------------------    
    fnoun=[]
    
    if second == l-1 :
        fnoun=noun
    else:
        for i in range(second,l):
            if k[i][1] == 'NNP' or k[i][1] == 'NN' or k[i][1] == 'JJ' or k[i][1] == 'NNS' or k[i][1] =='JJS' or k[i][1] =='JJR' :
                fnoun.append(i)
        
    for nindex in noun:
        if k[nindex][1] == 'PRP':
            cnoun=pronounreplacement
        else:
            cnoun=k[nindex][0]
        for findex in fnoun:
            G.add_edge(cnoun,k[findex][0],w=vb)

#---------------------------------------------------------------------------------------------------------------------            

pos = nx.spring_layout(G)
#drawing
nx.draw_networkx_nodes(G, pos, node_size=700)
nx.draw_networkx_edges(G, pos, edgelist=G.edges,
                       width=6)
#labels
nx.draw_networkx_labels(G, pos, font_size=10, font_family='sans-serif')
edge_labels = nx.get_edge_attributes(G,'w')
nx.draw_networkx_edge_labels(G, pos, edge_labels, font_size=10)

#plt.axis('off')
#plt.show()
